const express=require("express"),bodyParser=require("body-parser"),mongoose=require("mongoose"),jwt=require("jsonwebtoken"),bcrypt=require("bcrypt"),fs=require("fs"),expressjwt=require("express-jwt")["expressjwt"],errorMessages={EMAIL_ALREADY_EXISTS:"E-mail já existente!",INVALID_CREDENTIALS:"Usuário e/ou senha inválidos!",INTERNAL_SERVER_ERROR:"Erro interno de servidor",UNAUTHORIZED:"Não autorizado",SESSION_EXPIRED:"Sessão expirada"},app=express(),PORT=3e3,privateKey=(app.use(bodyParser.json()),app.listen(PORT,()=>{console.log("O servidor está rodando na porta "+PORT)}),fs.readFileSync("private.pem","utf-8")),publicKey=fs.readFileSync("public.pem","utf-8"),userSchema=(app.use("/api",(e,a,o)=>{expressjwt({secret:publicKey,algorithms:["RS256"]})(e,a,o)}),new mongoose.Schema({nome:String,email:String,senha:String,telefones:[{numero:String,ddd:String}],ultimo_login:{type:Date,default:null},data_criacao:{type:Date,default:null},data_atualizacao:{type:Date,default:null}})),url="mongodb://0.0.0.0:27017/api_users",db=(mongoose.connect(url),mongoose.connection),User=(db.on("error",console.error.bind(console,"Erro de conexão ao MongoDB: ")),db.once("open",()=>{console.log("Conectado ao MongoDB!")}),db.on("error",e=>console.error("Erro de conexão ao MongoDB: ",e)),mongoose.model("User",userSchema));app.post("/register",async(e,a)=>{try{var{nome:o,email:r,senha:s,telefones:t}=e.body,n=await bcrypt.hash(s,10),i=new User({nome:o,email:r,senha:n,telefones:t,data_criacao:new Date}),l=(await i.save(),jwt.sign({email:i.email},privateKey,{algorithm:"RS256",expiresIn:1800})),c={id:i._id,data_criacao:i.data_criacao,data_atualizacao:i.data_atualizacao,ultimo_login:i.ultimo_login,token:l};a.status(201).json(c)}catch(e){console.error(e),a.status(422).json({message:errorMessages.EMAIL_ALREADY_EXISTS})}}),app.post("/login",async(e,a)=>{try{var{email:o,senha:r}=e.body,s=await User.findOne({email:o});if(!s||!await bcrypt.compare(r,s.senha))return a.status(401).json({message:errorMessages.INVALID_CREDENTIALS});s.ultimo_login=new Date,await s.save();var t=jwt.sign({id:s._id,email:s.email,nome:s.nome},privateKey,{algorithm:"RS256",expiresIn:1800}),n={id:s._id,data_criacao:s.data_criacao,data_atualizacao:s.data_atualizacao,ultimo_login:s.ultimo_login,token:t};a.json(n)}catch(e){console.error(e),a.status(500).json({message:errorMessages.INTERNAL_SERVER_ERROR})}}),app.get("/api/protegida",(e,a)=>{e=e.auth;a.json({message:"Rota Protegida! ",user:e})}),app.use((e,a,o,r)=>{"UnauthorizedError"===e.name?o.status(401).json({message:errorMessages.UNAUTHORIZED}):"TokenExpiredError"===e.name?o.status(401).json({message:errorMessages.SESSION_EXPIRED}):r(e)});